<sector name="InGameSector">
	<beginplay>
		<!-- Debug message to represent Event will fire -->
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Detecting Players:"/>
		</action>
		<!-- Set-Up Player One -->
		<if name="CheckPlayerOneConnected">
			<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {0})</string></condition>
			<then>
				<!-- Debug message to represent Event will fire -->
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Player ONE Connected!"/>
				</action>
				<!-- Spawn Player One -->
				<action class="ActionCreateEntityFromFile" name="SpawnPlayerOne">
					<string name="filePath" value="Content/config/player1.xml" index="0" />
					<string name="className" value="Player" index="0" />
					<string name="instanceName" value="Player1" index="0" />
				</action>
				<expression name="SetPosition">
					<string name="expression">SpawnPlayerOne.newEntity.player = {0}</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerOne.newEntity.Input = XBoxControllerManager.PlayerOneState</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerOne.newEntity.PolygonRenderer.color = {vec4(1, 1, 1, 1)}</string>
				</expression>
			</then>
		</if>
		<!-- Set-Up Player Two -->
		<if name="CheckPlayerTwoConnected">
			<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {1})</string></condition>
			<then>
				<!-- Debug message to represent Event will fire -->
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Player TWO Connected!"/>
				</action>
				<!-- Spawn Player Two -->
				<action class="ActionCreateEntityFromFile" name="SpawnPlayerTwo">
					<string name="filePath" value="Content/config/player1.xml" index="0" />
					<string name="className" value="Player" index="0" />
					<string name="instanceName" value="Player2" index="0" />
				</action>
				<expression name="SetPosition">
					<string name="expression">SpawnPlayerTwo.newEntity.player = {1}</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerTwo.newEntity.Input = XBoxControllerManager.PlayerTwoState</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerTwo.newEntity.PolygonRenderer.color = {vec4(0, 1, 1, 1)}</string>
				</expression>
			</then>
		</if>
		<!-- Set-Up Player Three -->
		<if name="CheckPlayerThreeConnected">
			<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {2})</string></condition>
			<then>
				<!-- Debug message to represent Event will fire -->
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Player THREE Connected!"/>
				</action>
				<!-- Spawn Player Three -->
				<action class="ActionCreateEntityFromFile" name="SpawnPlayerThree">
					<string name="filePath" value="Content/config/player1.xml" index="0" />
					<string name="className" value="Player" index="0" />
					<string name="instanceName" value="Player3" index="0" />
				</action>
				<expression name="SetPosition">
					<string name="expression">SpawnPlayerThree.newEntity.player = {2}</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerThree.newEntity.Input = XBoxControllerManager.PlayerThreeState</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerThree.newEntity.PolygonRenderer.color = {vec4(1, 0, 1, 1)}</string>
				</expression>
			</then>
		</if>
		<!-- Set-Up Player Four -->
		<if name="CheckPlayerFourConnected">
			<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {3})</string></condition>
			<then>
				<!-- Debug message to represent Event will fire -->
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Player FOUR Connected!"/>
				</action>
				<!-- Spawn Player Four -->
				<action class="ActionCreateEntityFromFile" name="SpawnPlayerFour">
					<string name="filePath" value="Content/config/player1.xml" index="0" />
					<string name="className" value="Player" index="0" />
					<string name="instanceName" value="Player4" index="0" />
				</action>
				<expression name="SetPosition">
					<string name="expression">SpawnPlayerFour.newEntity.player = {3}</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerFour.newEntity.Input = XBoxControllerManager.PlayerFourState</string>
				</expression>
				<expression name="playerRefSetter">
					<string name="expression">SpawnPlayerFour.newEntity.PolygonRenderer.color = {vec4(1, 1, 0, 1)}</string>
				</expression>
			</then>
		</if>
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Detection Complete."/>
		</action>
	
	</beginplay>
	<action class="ActionDebug" name="TimeDebug">
		<expression name="asc">
			<string name="expression">message = {"Time = "} + ownerWorld.deltaTime</string>
		</expression>
	</action>
	
	<gameobject class="GameObject" name="Background">
	
		<vector name="position" value="vec4(0, 0, 0, 0)"/>
		<vector name="rotation" value="vec4(0, 0, 0, 0)"/>
		<vector name="scale" value="vec4(1, 1, 1, 0)"/>
		<float name="speed" value="0.0" />
			
		<sprite_renderer name="backgroundSprite">
			<image name="image">
				<string name="path" value="Content/resource/background2.png"/>
				<vector name="size" value="vec4(1280, 720, 0, 0)"/>
			</image>
			<integer name="layer" value="99" />
		</sprite_renderer>
	
	</gameobject>

	<!-- TODO: Spawn enemies randomly on escalating intervals -->
	<include file="Content\config\enemy_spawner.xml" />
	
	
	<include file="Content\config\enemy_diamond.xml" />
	
	
	<include file="Content\config\enemy_square.xml" />
	
	
	<include file="Content\config\enemy_arrow.xml" />

	
</sector>