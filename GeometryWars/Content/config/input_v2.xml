<world name="Steven's Universe">
	<!-- "InputHandlers" ActionList removed for accessibility Purposes 									-->
	<!-- Every InputHandler will have the following characteristics:									-->
	<!--	ButtonMapping:	HashMap (hence Scope) mapping the Event's Subtype with the button events	-->
	
	<!-- XBoxControllerHandler: Handles XBox Controller Events -->
	<action name="XBoxControllerManager" class="XBoxControllerHandler">
		<scope name="ButtonMapping">	<!-- Done using the enumerated name (as given by XInput) for the XBox Controller buttons -->
			<string name="X"				value="MoveLeft"/>
			<string name="Y"				value="MoveUp"/>
			<string name="A"				value="MoveDown"/>
			<string name="B"				value="MoveRight"/>
			<string name="START"			value="Start"/>
			<string name="SELECT"			value="Select"/>
			<string name="DPAD_UP"			value="MoveUp"/>
			<string name="DPAD_DOWN"		value="MoveDown"/>
			<string name="DPAD_LEFT"		value="MoveLeft"/>
			<string name="DPAD_RIGHT"		value="MoveRight"/>
			<string name="LEFT_THUMB"		value="MoveLeft"/>
			<string name="RIGHT_THUMB"		value="MoveRight"/>
			<string name="LEFT_SHOULDER"	value="MoveLeft"/>
			<string name="RIGHT_SHOULDER"	value="MoveRight"/>
		</scope>
	</action>

	<!-- ==================== Event-Driven Player Connection =============== -->
	<!-- Player Connected Reaction -->
	<reaction class="ReactionAttributed" name="OnPlayerConnection">
		<string name="subtype" value="PlayerConnected"/>
		
		<!-- Debug message to represent Event will fire -->
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Player Connected!"/>
		</action>
	</reaction>
	
	<!-- Player Disconnected Reaction -->
	<reaction class="ReactionAttributed" name="OnPlayerDisconnection">
		<string name="subtype" value="PlayerDisconnected"/>
		
		<!-- Debug message to represent Event will fire -->
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Player Disconnected!"/>
		</action>
	</reaction>
	
	<sector name="Sector">
		
		<entity class="Entity" name="Character">
			<!-- Member Variables -->
			<integer name="Player"		value="0"/>
			<integer name="VelX"		value="0"/>
			<integer name="VelY"		value="0"/>
			<integer name="Speed"		value="1"/>
			
			<!-- ============================ Event-Driven Button Callbacks =======================	-->
			<!-- ButtonMapping-Defined Reactions:													-->
			<!--	See "ButtonMapping" scope under XBoxControllerHandler							-->
			<!--	to see the Buttons that map to the SubTyped-Events								-->
			
			<action class="ActionList" name="Movement">
				<if name="CheckPlayer">
					<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, Player)</string></condition>
					<then>
						
			<!--
						<expression name="modifyX">
							<string name="expression">VelX = XBoxControllerManager.PlayerOneState.LeftStick.MagnitudeX / {32768}</string>
						</expression>
						<expression name="modifyY">
							<string name="expression">VelY = XBoxControllerManager.PlayerOneState.LeftStick.MagnitudeY / {32768}</string>
						</expression>
			 -->
					</then>
				</if>
			</action>
			
			<!-- MoveLeft Subtype -->
			<reaction class="ReactionAttributed" name="OnMoveLeft">
				<string name="subtype" value="MoveLeft"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == Player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">VelX = {0} - Speed</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">VelX = {0}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveRight SubType -->
			<reaction class="ReactionAttributed" name="OnMoveRight">
				<string name="subtype" value="MoveRight"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == Player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">VelX = Speed</string>
								</expression>
							</then>
							<else>
								
								<expression name="modify">
									<string name="expression">VelX = {0}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveUp SubType -->
			<reaction class="ReactionAttributed" name="OnMoveUp">
				<string name="subtype" value="MoveUp"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == Player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">VelY = {0} - Speed</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">VelY = {0}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveDown SubType -->
			<reaction class="ReactionAttributed" name="OnMoveDown">
				<string name="subtype" value="MoveDown"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == Player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">VelY = Speed</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">VelY = {0}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
		</entity>
	</sector>
</world>
