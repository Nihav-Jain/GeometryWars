<world name="WackyWorld">


	<action class="ActionList" name="InputManager">
		<!-- InputHandlers is a list that will hold all types of Input Handlers.							-->
		<!-- Every InputHandler will have the following characteristics:									-->
		<!--	ButtonMapping:	HashMap (hence Scope) mapping the Event's Subtype with the button events	-->
		
		<!-- XBoxControllerHandlerHandler: Handles XBox Controller Events -->
		<action name="InputHandlers" class="XBoxControllerHandler">
			<scope name="ButtonMapping">	<!-- Done using the enumerated name (as given by XInput) for the XBox Controller buttons -->
				<string name="X"				value="Shoot"/>
				<string name="Y"				value="Shoot"/>
				<string name="A"				value="Shoot"/>
				<string name="B"				value="Shoot"/>
				<string name="START"			value="Start"/>
				<string name="SELECT"			value="Select"/>
				<string name="DPAD_UP"			value="MoveUp"/>
				<string name="DPAD_DOWN"		value="MoveDown"/>
				<string name="DPAD_LEFT"		value="MoveLeft"/>
				<string name="DPAD_RIGHT"		value="MoveRight"/>
				<string name="LEFT_THUMB"		value="Shoot"/>
				<string name="RIGHT_THUMB"		value="Shoot"/>
				<string name="LEFT_SHOULDER"	value="Shoot"/>
				<string name="RIGHT_SHOULDER"	value="Shoot"/>
			</scope>
		</action>
	</action>

	<!-- ==================== Event-Driven Player Connection =============== -->
	<!-- Player Connected Reaction -->
	<reaction class="ReactionAttributed" name="OnPlayerConnection">
		<string name="subtype" value="PlayerConnected"/>
		
		<!-- Debug message to represent Event will fire -->
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Player Connected!"/>
		</action>
	</reaction>
	
	<!-- Player Disconnected Reaction -->
	<reaction class="ReactionAttributed" name="OnPlayerDisconnection">
		<string name="subtype" value="PlayerDisconnected"/>
		
		<!-- Debug message to represent Event will fire -->
		<action class="ActionDebug" name="Debug">
			<string name="message" value="Player Disconnected!"/>
		</action>
	</reaction>
	
	<sector name="playerSector">
	
		<gameobject class="Player" name="Player0">
			<integer name="player"	value="0"/>
			<vector name="position" value="vec4(0, 0, 0, 0)"/>
			<vector name="velocity" value="vec4(0, 0, 0, 0)"/>
			<vector name="heading" value="vec4(0, 0, 0, 0)" />
			<float name="speed" value="10" />
			<vector name="rotation" value="vec4(0, 0, 0, 0)"/>
			<vector name="scale" value="vec4(100, 100, 1, 0)"/>
			<vector name="delta" value="vec4(0.01, 0.01, 0, 0)"/>
			<float name="attack speed" value="0.1" />
			<bool name="can attack" value="true" />
			<integer name="lives" value="3" />
			<bool name="shoot" value="false" />
			<integer name="bombs" value="3" />
			<bool name="useBomb" value="false" />
			<polygon_renderer name="jet">
				<vector name="color" value="vec4(1, 0, 0, 1)"/>
				<integer name="indices" value="0"/>
				<integer name="indices" value="1"/>
				<integer name="indices" value="1"/>
				<integer name="indices" value="2"/>
				<integer name="indices" value="2"/>
				<integer name="indices" value="3"/>
				<integer name="indices" value="3"/>
				<integer name="indices" value="4"/>
				<integer name="indices" value="4"/>
				<integer name="indices" value="5"/>
				<integer name="indices" value="5"/>
				<integer name="indices" value="6"/>
				<integer name="indices" value="6"/>
				<integer name="indices" value="7"/>
				<integer name="indices" value="7"/>
				<integer name="indices" value="0"/>
				<vector name="points" value="vec4(0, -1, 0, 0)"/>
				<vector name="points" value="vec4(1.333, 0, 0, 0)"/>
				<vector name="points" value="vec4(0.666, 1, 0, 0)"/>
				<vector name="points" value="vec4(1, 0.333, 0, 0)"/>
				<vector name="points" value="vec4(0, -0.333, 0, 0)"/>
				<vector name="points" value="vec4(-1, 0.333, 0, 0)"/>
				<vector name="points" value="vec4(-0.666, 1, 0, 0)"/>
				<vector name="points" value="vec4(-1.333, 0, 0, 0)"/>
			</polygon_renderer>
			
			<!-- MoveLeft Subtype -->
			<reaction class="ReactionAttributed" name="OnMoveLeft">
				<string name="subtype" value="MoveLeft"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">velocity = velocity - speed * {vec4(1, 0, 0, 0)}</string>
								</expression>
								<expression name="rotate">
									<string name="expression">rotation = {vec4(90, 0, 0, 0)}</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">velocity = velocity + speed * {vec4(1, 0, 0, 0)}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveRight SubType -->
			<reaction class="ReactionAttributed" name="OnMoveRight">
				<string name="subtype" value="MoveRight"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">velocity = velocity + speed * {vec4(1, 0, 0, 0)}</string>
								</expression>
								<expression name="rotate">
									<string name="expression">rotation = {vec4(270, 0, 0, 0)}</string>
								</expression>
							</then>
							<else>
								
								<expression name="modify">
									<string name="expression">velocity = velocity - speed * {vec4(1, 0, 0, 0)}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveUp SubType -->
			<reaction class="ReactionAttributed" name="OnMoveUp">
				<string name="subtype" value="MoveUp"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">velocity = velocity + speed * {vec4(0, 1, 0, 0)}</string>
								</expression>
								<expression name="rotate">
									<string name="expression">rotation = {vec4(0, 0, 0, 0)}</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">velocity = velocity - speed * {vec4(0, 1, 0, 0)}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- MoveDown SubType -->
			<reaction class="ReactionAttributed" name="OnMoveDown">
				<string name="subtype" value="MoveDown"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<if name="CheckIsButtonPressed">
							<condition><string name="expression">IsButtonPressed</string></condition>
							<then>
								<expression name="modify">
									<string name="expression">velocity = velocity - speed * {vec4(0, 1, 0, 0)}</string>
								</expression>
								<expression name="rotate">
									<string name="expression">rotation = {vec4(180, 0, 0, 0)}</string>
								</expression>
							</then>
							<else>
								<expression name="modify">
									<string name="expression">velocity = velocity + speed * {vec4(0, 1, 0, 0)}</string>
								</expression>
							</else>
						</if>
					</then>
				</if>
			</reaction>
			
			<!-- UPDATING POSITION HERE -->
			<expression name="modify">
				<string name="expression">position = position + velocity</string>
			</expression>
			
			<!-- Shoot SubType -->
			<reaction class="ReactionAttributed" name="OnShoot">
				<string name="subtype" value="Shoot"/>
				
				<expression name="modify">
					<string name="expression">shoot = {true}</string>
				</expression>
				
				<!--
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<expression name="modify">
							<string name="expression">shoot = {true}</string>
						</expression>
					</then>
				</if>
				-->
			</reaction>
			
			<!-- Bomb SubType -->
			<reaction class="ReactionAttributed" name="OnUseBomb">
				<string name="subtype" value="Bomb"/>
				
				<if name="CheckPlayer">
					<condition><string name="expression">PlayerNumber == player</string></condition>
					<then>
						<expression name="modify">
							<string name="expression">useBomb = {true}</string>
						</expression>
					</then>
				</if>
			</reaction>
			
		</gameobject>
		
	</sector>	
</world>