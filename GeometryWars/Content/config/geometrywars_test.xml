<root>
	<define>		
		<include file="Content\config\player1.xml" />
		<include file="Content\config\bullet.xml" />
		<include file="Content\config\enemy_pinwheel.xml" />	
		<include file="Content\config\enemy_diamond.xml" />
		<include file="Content\config\enemy_square.xml" />
		<include file="Content\config\enemy_arrow.xml" />
		<include file="Content\config\collect_multiplier.xml" />
	</define>

	<world name="GeometryWarsWorld">
		<integer name="width" value="1280"/>
		<integer name="height" value="720" />

		<beginplay>
			<!-- Load music  -->
			<action class="ActionLoadMusic" name="loadMusic">
				<string name="musicName" value="Enemy_explode.mp3"/>
				<string name="musicName" value="GW3Dimensions.mp3"/>
				<string name="musicName" value="Fire_normal.mp3"/>
			</action>
			
			<!-- Play background music -->
			<action class="ActionPlayMusic" name="playMusic1">
				<string name="musicName" value="GW3Dimensions.mp3"/>
				<integer name="loop" value="0"  index="0"/>
				<float name="volume" value="1.0" index="0"/>
			</action>
		</beginplay>

		<!-- ==================== Event-Driven Player Connection =============== -->
		<!-- Player Connected Reaction -->
		<reaction class="ReactionAttributed" name="OnPlayerConnection">
			<string name="subtype" value="PlayerConnected"/>
			
			<!-- Debug message to represent Event will fire -->
			<action class="ActionDebug" name="Debug">
				<string name="message" value="Player Connected!"/>
			</action>
		</reaction>
		
		<!-- Player Disconnected Reaction -->
		<reaction class="ReactionAttributed" name="OnPlayerDisconnection">
			<string name="subtype" value="PlayerDisconnected"/>
			
			<!-- Debug message to represent Event will fire -->
			<action class="ActionDebug" name="Debug">
				<string name="message" value="Player Disconnected!"/>
			</action>
		</reaction>

		<!-- "InputHandlers" ActionList removed for accessibility Purposes 									-->
		<!-- Every InputHandler will have the following characteristics:									-->
		<!--	ButtonMapping:	HashMap (hence Scope) mapping the Event's Subtype with the button events	-->
		
		<!-- XBoxControllerHandler: Handles XBox Controller Events -->
		<action name="XBoxControllerManager" class="XBoxControllerHandler">
			<scope name="ButtonMapping">	<!-- Done using the enumerated name (as given by XInput) for the XBox Controller buttons -->
				<string name="B"				value="Bomb"/>
				<string name="START"			value="Start"/>
				<string name="SELECT"			value="Select"/>
				<!--
				<string name="X"				value="Shoot"/>
				<string name="Y"				value="Shoot"/>
				<string name="A"				value="Shoot"/>
				<string name="DPAD_UP"			value="MoveUp"/>
				<string name="DPAD_DOWN"		value="MoveDown"/>
				<string name="DPAD_LEFT"		value="MoveLeft"/>
				<string name="DPAD_RIGHT"		value="MoveRight"/>
				<string name="LEFT_THUMB"		value="MoveLeft"/>
				<string name="RIGHT_THUMB"		value="MoveRight"/>
				<string name="LEFT_SHOULDER"	value="MoveLeft"/>
				<string name="RIGHT_SHOULDER"	value="MoveRight"/>
				-->
			</scope>
		</action>
		
		<sector name="InGameSector">
			<beginplay>
				<!-- Debug message to represent Event will fire -->
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Detecting Players:"/>
				</action>
				<!-- Set-Up Player One -->
				<if name="CheckPlayerOneConnected">
					<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {0})</string></condition>
					<then>
						<!-- Debug message to represent Event will fire -->
						<action class="ActionDebug" name="Debug">
							<string name="message" value="Player ONE Connected!"/>
						</action>
						<!-- Spawn Player One -->
						<action class="ActionCreateEntityFromFile" name="SpawnPlayerOne">
							<string name="filePath" value="Content/config/player1.xml" index="0" />
							<string name="className" value="Player" index="0" />
							<string name="instanceName" value="Player1" index="0" />
						</action>
						<expression name="SetPosition">
							<string name="expression">Player1.player = {0}</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player1.Input = XBoxControllerManager.PlayerOneState</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player1.PolygonRenderer.color = {vec4(1, 1, 1, 1)}</string>
						</expression>
					</then>
				</if>
				<!-- Set-Up Player Two -->
				<if name="CheckPlayerTwoConnected">
					<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {1})</string></condition>
					<then>
						<!-- Debug message to represent Event will fire -->
						<action class="ActionDebug" name="Debug">
							<string name="message" value="Player TWO Connected!"/>
						</action>
						<!-- Spawn Player Two -->
						<action class="ActionCreateEntityFromFile" name="SpawnPlayerTwo">
							<string name="filePath" value="Content/config/player1.xml" index="0" />
							<string name="className" value="Player" index="0" />
							<string name="instanceName" value="Player2" index="0" />
						</action>
						<expression name="SetPosition">
							<string name="expression">Player2.player = {1}</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player2.Input = XBoxControllerManager.PlayerTwoState</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player2.PolygonRenderer.color = {vec4(0, 1, 1, 1)}</string>
						</expression>
					</then>
				</if>
				<!-- Set-Up Player Three -->
				<if name="CheckPlayerThreeConnected">
					<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {2})</string></condition>
					<then>
						<!-- Debug message to represent Event will fire -->
						<action class="ActionDebug" name="Debug">
							<string name="message" value="Player THREE Connected!"/>
						</action>
						<!-- Spawn Player Three -->
						<action class="ActionCreateEntityFromFile" name="SpawnPlayerThree">
							<string name="filePath" value="Content/config/player1.xml" index="0" />
							<string name="className" value="Player" index="0" />
							<string name="instanceName" value="Player3" index="0" />
						</action>
						<expression name="SetPosition">
							<string name="expression">Player3.player = {2}</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player3.Input = XBoxControllerManager.PlayerThreeState</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player3.PolygonRenderer.color = {vec4(1, 0, 1, 1)}</string>
						</expression>
					</then>
				</if>
				<!-- Set-Up Player Four -->
				<if name="CheckPlayerFourConnected">
					<condition><string name="expression">array(XBoxControllerManager.IsPlayerConnected, {3})</string></condition>
					<then>
						<!-- Debug message to represent Event will fire -->
						<action class="ActionDebug" name="Debug">
							<string name="message" value="Player FOUR Connected!"/>
						</action>
						<!-- Spawn Player Four -->
						<action class="ActionCreateEntityFromFile" name="SpawnPlayerFour">
							<string name="filePath" value="Content/config/player1.xml" index="0" />
							<string name="className" value="Player" index="0" />
							<string name="instanceName" value="Player4" index="0" />
						</action>
						<expression name="SetPosition">
							<string name="expression">Player4.player = {0}</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player4.Input = XBoxControllerManager.PlayerFourState</string>
						</expression>
						<expression name="playerRefSetter">
							<string name="expression">Player4.PolygonRenderer.color = {vec4(1, 1, 0, 1)}</string>
						</expression>
					</then>
				</if>
				<action class="ActionDebug" name="Debug">
					<string name="message" value="Detection Complete."/>
				</action>
			</beginplay>

			<action class="ActionDebug" name="TimeDebug">
				<expression name="asc">
					<string name="expression">message = {"Time = "} + ownerWorld.deltaTime</string>
				</expression>
			</action>

			<!-- TODO: Spawn enemies randomly on escalating intervals -->
			<include file="Content\config\enemy_pinwheel.xml" />	
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			<include file="Content\config\enemy_pinwheel.xml" />
			
			<include file="Content\config\enemy_diamond.xml" />
			
			
			<include file="Content\config\enemy_square.xml" />
			
			
			<include file="Content\config\enemy_arrow.xml" />
			
		</sector>	
	</world>
</root>